#!/usr/bin/env python3

import subprocess
import sys

def valid(printers, choice):
    return choice > 0 and choice <= printers.length

def new_current_file():
    return {"copies": 1}

# TODO: Make this not a fucking disaster. aka, "ask Kayila or Jamie for help."
def pluck_argument(arg, ary=sys.argv):
    args = list(filter(lambda x: x.startswith("--{}=".format(arg)), ary))
    if len(arg) == 0:
        return None
    arg = args[-1]
    key, val = arg.split("=")
    return val

def list_printers():
    lpstat_lines = subprocess.check_output(["lpstat", "-p"], encoding="utf-8").strip().split("\n")
    printer_list = list(map(lambda x: x.split(" ")[1], lpstat_lines))
    return printer_list

def get_printer_choice(printers):
    actual_choice = 0
    if len(printers) > 1:
        print("Available printers:")
        for (idx, printer) in enumerate(printers):
            print("{}. {}".format(idx + 1, printer))
        print("Which printer should be used? ")
        choice = 0
        for line in sys.stdin:
            print(line)
        actual_choice = choice - 1
    return printers[actual_choice]

def pluralize(n, singular, plural):
    if n == 1:
        return singular
    else:
        return plural

num_copies = pluck_argument("copies")
printer = get_printer_choice(list_printers())
files   = filter(lambda x: not x.startswith("--"), sys.argv[1::])
copy_str = pluralize(num_copies, "copy", "copies")

print("Printer: {}".format(printer))
print("Copies:  {}".format(num_copies))
print("")
print("Files:")

for filename in files:
    print("- {}".format(filename))
    #print("convert {} -background white -alpha remove - | lp -d Lexmark_Lexmark_X204n -n {}".format(filename, num_copies))
